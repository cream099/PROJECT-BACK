// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Search {
  id     Int    @id @default(autoincrement())
  name   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  role     Role     @default(USER)
  password String
  email    String   @unique
  phone    String   @unique
  cart     Cart[]
  searches Search[]
  orders   Order[]
}

model Cart {
  id        Int     @id @default(autoincrement())
  quantity  Int     @default(1)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int     @unique @map("user_id")
  products  Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int
}

model Order {
  id        Int        @id @default(autoincrement())
  name      String
  phone     String
  address   String
  total     Int // Float
  date      DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int
  payments  Payment[]
  shipments Shipment[]
}

model Product {
  id          Int    @id @default(autoincrement())
  productName String @map("product_n  ame")
  price       Int //Float
  cart        Cart[]
  img         Img[]
}

model Img {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

model Payment {
  id            Int           @id @default(autoincrement())
  amount        Int
  paymentDate   DateTime      @updatedAt
  paymentStatus PaymentStatus
  order         Order         @relation(fields: [orderId], references: [id])
  orderId       Int
}

enum ShipmentStatus {
  PROCESSING
  SHIPPED
  DELIVERED
}

model Shipment {
  id             Int            @id @default(autoincrement())
  shipmentDate   DateTime       @updatedAt
  shipmentStatus ShipmentStatus
  order          Order          @relation(fields: [orderId], references: [id])
  orderId        Int
}
